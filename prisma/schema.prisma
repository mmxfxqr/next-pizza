generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String   @unique
    password String
    role     UserRole @default(USER)
    verified DateTime? @default(now())

    provider String?
    providerId String?

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt

    cart             Cart?
    orders           Order[]
    verificationCode VerificationCode?
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    products Product[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String
    desc String?
    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    ingredients Ingredient[]
    items       ProductItem[]
}

model ProductItem {
    id Int @id @default(autoincrement())

    price      Int
    size       Int?
    pizzaType Int?

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    cartItems CartItem[]
}

model Ingredient {
    id Int @id @default(autoincrement())

    name     String
    price    Int
    imageUrl String

    products Product[]

    cartItem CartItem[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt

    cartItemId Int?
}

model Cart {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int? @unique

    token String

    items       CartItem[]
    totalAmount Int        @default(0)

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    productItem   ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int

    quantity Int @default(1)

    ingredients Ingredient[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    items Json

    fullName String
    address  String
    email    String
    phone    String
    comment  String?

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String

    createdAt DateTime @default(now())

    @@unique([userId, code])
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}
